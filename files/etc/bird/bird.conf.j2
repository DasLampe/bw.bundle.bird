router id {{ router_id }};

protocol kernel {
    metric 0;
    import none;
    learn;
    export all;
}

protocol device {
}

{% if protocols.get('static', []) -%}
protocol static {
    {% for entry in protocols.get('static') -%}
    {{ entry }}
    {% endfor %}
}
{% endif %}

{% for name, cfg in protocols.get('direct', {}).items() %}
protocol direct {{ name }}{
    interface "{{ cfg.get('interface') }}";
}
{% endfor %}

{% for peer, cfg in protocols.get('bgp', {}).items() %}
protocol bgp {{ peer }} {
    local as {{ localAS }};
    neighbor {{ cfg.get('ip') }} as {{ cfg.get('as') }};
    export {{ cfg.get('export') }};
    import {{ cfg.get('import') }};
    password "{{ cfg.get('password') }}";
}
{%  endfor %}